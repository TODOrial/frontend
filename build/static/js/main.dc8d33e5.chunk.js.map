{"version":3,"sources":["services/api.ts","components/TaskCard/index.tsx","screens/HomeScreen.tsx","screens/EditScreen.tsx","screens/CreateScreen.tsx","App.tsx","index.tsx"],"names":["REACT_ENV","process","api","axios","create","baseURL","development","production","TaskCard","taskData","_id","title","description","createdAt","DateTime","local","setLocale","updatedAtDate","fromISO","className","to","toFormat","HomeScreen","useState","loading","setLoading","tasks","setTasks","offset","limit","last","navigation","setNavigation","fetchTasks","get","then","response","data","results","useEffect","map","task","index","key","type","color","pageCount","Math","max","ceil","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","breakLabel","nextLabel","previousLabel","containerClassName","breakClassName","activeClassName","nextClassName","pageLinkClassName","previousClassName","EditScreen","id","useParams","history","useHistory","editTask","setEditTask","setTitle","setDescription","catch","error","push","status","errorData","toast","oldValue","updatedAt","value","onChange","e","target","onClick","event","preventDefault","updatedTask","patch","success","info","delete","CreateScreen","post","App","path","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAEMA,EAAoBC,mHAAYD,WAAa,aASpCE,EAFHC,IAAMC,OAAO,CAAEC,QALiB,CACxCC,YAAa,wBACbC,WAAY,kCAG6BP,K,QCiB9BQ,MApBf,YAAyD,IAArCC,EAAoC,EAApCA,SACRC,EAAuCD,EAAvCC,IAAKC,EAAkCF,EAAlCE,MAAOC,EAA2BH,EAA3BG,YAAaC,EAAcJ,EAAdI,UAEjCC,WAASC,QAAQC,UAAU,SAE3B,IAAMC,EAAgBH,WAASI,QAAQL,GAEvC,OACI,kBAAC,IAAD,CAAMM,UAAU,YAAYC,GAAE,WAAMV,EAAN,UAE1B,wBAAIS,UAAU,cAAcR,GAC5B,yBAAKQ,UAAU,oCACX,uBAAGA,UAAU,oBAAoBP,GACjC,uBAAGO,UAAU,wBAAwBF,EAAcI,SAAS,UCoD7DC,MA9Df,WAAuB,IAAD,EACYC,oBAAkB,GAD9B,mBACXC,EADW,KACFC,EADE,OAEQF,qBAFR,mBAEXG,EAFW,KAEJC,EAFI,OAGkBJ,mBAAyB,CAAEK,OAAQ,EAAGC,MAAO,GAAIC,KAAM,IAHzE,mBAGXC,EAHW,KAGCC,EAHD,KASlB,SAASC,EAAWL,EAAgBC,GAEhC,OADAJ,GAAW,GACJvB,EAAIgC,IAAJ,wBAAyBN,EAAzB,kBAAyCC,IAASM,MAAK,SAACC,GAAc,IAAD,EAC/BA,EAASC,KAA1CT,EADgE,EAChEA,OAAQC,EADwD,EACxDA,MAAOC,EADiD,EACjDA,KAAMQ,EAD2C,EAC3CA,QAE7Bb,GAAW,GACXE,EAASW,GACTN,EAAc,CAAEJ,SAAQC,QAAOC,YAWvC,OAtBAS,qBAAU,WACNN,EAAWF,EAAWH,OAAQG,EAAWF,SAC1C,CAACE,EAAWH,OAAQG,EAAWF,QAqB9B,yBAAKV,UAAU,6BACTK,GAAWE,GACT,wBAAIP,UAAU,aACTO,EAAMc,KAAI,SAACC,EAAMC,GAAP,OACP,kBAAC,EAAD,CAAUjC,SAAUgC,EAAME,IAAKD,QAK1ClB,GACG,yBAAKL,UAAU,eACX,kBAAC,IAAD,CAAcyB,KAAK,OAAOC,MAAM,UAIxC,kBAAC,IAAD,CACIC,UAAWC,KAAKC,IAAI,EAAGD,KAAKE,KAAKlB,EAAWD,KAAOC,EAAWF,QAC9DqB,mBAAoB,EACpBC,qBAAsB,EACtBC,aA3BZ,SAAyBf,GACrB,IAAMgB,EAAWhB,EAAKgB,SAGtBpB,EAFec,KAAKE,KAAKI,EAAWtB,EAAWF,OAE5BE,EAAWF,QAwBtByB,WAAY,MACZC,UAAW,aACXC,cAAe,SACfC,mBAAoB,aACpBC,eAAgB,WAChBC,gBAAiB,SACjBC,cAAe,cACfC,kBAAmB,cACnBC,kBAAmB,kBCkFpBC,MAzIf,WAAuB,IACbC,EAAOC,cAAPD,GACAE,EAAUC,cAFE,EAIY5C,oBAAkB,GAJ9B,mBAIXC,EAJW,KAIFC,EAJE,OAKcF,qBALd,mBAKX6C,EALW,KAKDC,EALC,OAOQ9C,mBAAiB,IAPzB,mBAOXZ,EAPW,KAOJ2D,EAPI,OAQoB/C,mBAAiB,IARrC,mBAQXX,EARW,KAQE2D,EARF,KAyGlB,OA/FAhC,qBAAU,WACNrC,EAAIgC,IAAJ,iBAAkB8B,IACb7B,MAAK,SAACC,GACH,IAAMK,EAAOL,EAASC,KAEtBgC,EAAY5B,GAEZ6B,EAAS7B,EAAK9B,OACd4D,GAAmB,OAAJ9B,QAAI,IAAJA,OAAA,EAAAA,EAAM7B,cAAe,IACpCa,GAAW,MAEd+C,OAAM,SAACC,GAGJ,GAFAP,EAAQQ,KAAK,KAETD,EAAMrC,SAAU,CAChB,IAAMuC,EAASF,EAAMrC,SAASuC,OACxBC,EAAYH,EAAMrC,SAASC,KAEjCwC,IAAMJ,MAAN,UAAeE,EAAf,cAA2BC,EAAUH,aAErCI,IAAMJ,MAAN,mGAGb,CAACT,EAAIE,IAER3B,qBAAU,WACN8B,GAAY,SAACS,GAQT,MAPiB,CACbpE,IAAG,OAAEoE,QAAF,IAAEA,OAAF,EAAEA,EAAUpE,IACfC,MAAOA,EACPC,YAAaA,EACbC,UAAS,OAAEiE,QAAF,IAAEA,OAAF,EAAEA,EAAUjE,UACrBkE,UAAS,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAUC,gBAI9B,CAACpE,EAAOC,IA4DP,yBAAKO,UAAU,4BACVK,GACG,yBAAKL,UAAU,eACX,kBAAC,IAAD,CAAcyB,KAAK,OAAOC,MAAM,WAGtCrB,IAAY4C,GACV,yBAAKjD,UAAU,eACX,kBAAC,IAAD,CAAcyB,KAAK,OAAOC,MAAM,WAGtCrB,GAAW4C,GAAY,kBAAC,EAAD,CAAU3D,SAAU2D,KAC3C5C,GAAW4C,GACT,0BAAMjD,UAAU,OACZ,2BAAOA,UAAU,OAAjB,YAEI,2BAAOA,UAAU,aAAayB,KAAK,OAAOoC,MAAOrE,EAAOsE,SAAU,SAACC,GAAD,OAAOZ,EAASY,EAAEC,OAAOH,WAE/F,2BAAO7D,UAAU,OAAjB,kBAEI,2BAAOA,UAAU,aAAayB,KAAK,OAAOoC,MAAOpE,EAAaqE,SAAU,SAACC,GAAD,OAAOX,EAAeW,EAAEC,OAAOH,WAE3G,2BAAO7D,UAAU,qBAAqByB,KAAK,SAASoC,MAAM,SAASI,QAhFnF,SAAsBC,GAClBA,EAAMC,iBACN7D,GAAW,GAEX,IAAM8D,EAAc,CAChB5E,QACAC,eAGJV,EAAIsF,MAAJ,wBAAoBpB,QAApB,IAAoBA,OAApB,EAAoBA,EAAU1D,IAA9B,SAA0C6E,GACrCpD,MAAK,WACF0C,IAAMY,QAAQ,oDAEjBjB,OAAM,SAACC,GACJ,GAAIA,EAAMrC,SAAU,CAChB,IAAMuC,EAASF,EAAMrC,SAASuC,OACxBC,EAAYH,EAAMrC,SAASC,KAEjCwC,IAAMJ,MAAN,UAAeE,EAAf,cAA2BC,EAAUH,aAErCI,IAAMJ,MAAN,2FAGPtC,MAAK,WACFV,GAAW,SAyDP,2BAAON,UAAU,qBAAqByB,KAAK,SAASoC,MAAM,WAAWI,QA9BrF,SAAsBC,GAClBA,EAAMC,iBACNT,IAAMa,KAAK,yDACXxB,EAAQQ,KAAK,QA4BD,2BAAOvD,UAAU,qBAAqByB,KAAK,SAASoC,MAAM,UAAUI,QAtDpF,SAAsBC,GAClBA,EAAMC,iBACN7D,GAAW,GAEXvB,EAAIyF,OAAJ,wBAAqBvB,QAArB,IAAqBA,OAArB,EAAqBA,EAAU1D,IAA/B,YACKyB,MAAK,WACF0C,IAAMY,QAAQ,wCACdvB,EAAQQ,KAAK,QAEhBF,OAAM,SAACC,GAGJ,GAFAhD,GAAW,GAEPgD,EAAMrC,SAAU,CAChB,IAAMuC,EAASF,EAAMrC,SAASuC,OACxBC,EAAYH,EAAMrC,SAASC,KAEjCwC,IAAMJ,MAAN,UAAeE,EAAf,cAA2BC,EAAUH,aAErCI,IAAMJ,MAAN,wFCjCLmB,MAhEf,WAAyB,IAAD,EACUrE,qBADV,mBACbC,EADa,KACJC,EADI,OAEMF,mBAAiB,IAFvB,mBAEbZ,EAFa,KAEN2D,EAFM,OAGkB/C,mBAAiB,IAHnC,mBAGbX,EAHa,KAGA2D,EAHA,KAKdL,EAAUC,cAkChB,OACI,yBAAKhD,UAAU,8BACVK,GACG,yBAAKL,UAAU,eACX,kBAAC,IAAD,CAAcyB,KAAK,OAAOC,MAAM,WAGtCrB,GACE,0BAAML,UAAU,OACZ,2BAAOA,UAAU,OAAjB,YAEI,2BAAOA,UAAU,aAAayB,KAAK,OAAOoC,MAAOrE,EAAOsE,SAAU,SAACC,GAAD,OAAOZ,EAASY,EAAEC,OAAOH,WAE/F,2BAAO7D,UAAU,OAAjB,kBAEI,2BAAOA,UAAU,aAAayB,KAAK,OAAOoC,MAAOpE,EAAaqE,SAAU,SAACC,GAAD,OAAOX,EAAeW,EAAEC,OAAOH,WAE3G,2BAAO7D,UAAU,qBAAqByB,KAAK,SAASoC,MAAM,QAAQI,QAjDlF,SAAsBC,GAClBA,EAAMC,iBACN7D,GAAW,GAEXvB,EAAI2F,KAAK,gBAAiB,CACtBlF,QACAC,gBAECuB,MAAK,WACF0C,IAAMY,QAAQ,8BACdvB,EAAQQ,KAAK,QAEhBF,OAAM,SAACC,GAGJ,GAFAhD,GAAW,GAEPgD,EAAMrC,SAAU,CAChB,IAAMuC,EAASF,EAAMrC,SAASuC,OACxBC,EAAYH,EAAMrC,SAASC,KAEjCwC,IAAMJ,MAAN,UAAeE,EAAf,cAA2BC,EAAUH,aAErCI,IAAMJ,MAAN,mFA6BA,2BAAOtD,UAAU,qBAAqByB,KAAK,SAASoC,MAAM,WAAWI,QAxBrF,SAAsBC,GAClBA,EAAMC,iBACNT,IAAMa,KAAK,yDACXxB,EAAQQ,KAAK,WCpCf1E,EAAoBC,mHAAYD,WAAa,aAyCpC8F,MAvCf,WACI,OACI,yBAAK3E,UAAU,OACX,kBAAC,IAAD,KACmB,eAAdnB,GAA8B,0CAC/B,wBAAImB,UAAU,aAAd,YAEA,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAMC,GAAG,KAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,qBAGJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO2E,KAAK,WACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,QAGR,kBAAC,IAAD,CACIC,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,OCjChCC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.dc8d33e5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst REACT_ENV: string = process.env.REACT_ENV || \"production\";\r\n\r\nconst baseURLs: { [key: string]: string } = {\r\n    development: \"http://localhost:5000\",\r\n    production: \"https://todorial.herokuapp.com\",\r\n};\r\n\r\nconst api = axios.create({ baseURL: baseURLs[REACT_ENV] });\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport { DateTime } from \"luxon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { TaskType } from \"../../types\";\r\n\r\nfunction TaskCard({ taskData }: { taskData: TaskType }) {\r\n    const { _id, title, description, createdAt } = taskData;\r\n\r\n    DateTime.local().setLocale(\"pt-br\");\r\n\r\n    const updatedAtDate = DateTime.fromISO(createdAt);\r\n\r\n    return (\r\n        <Link className=\"task-card\" to={`/${_id}/edit`}>\r\n            {/* <p>{_id}</p> */}\r\n            <h4 className=\"task-title\">{title}</h4>\r\n            <div className=\"row space-between word-break-all\">\r\n                <p className=\"task-description\">{description}</p>\r\n                <p className=\"task-updated-at-date\">{updatedAtDate.toFormat(\"ff\")}</p>\r\n            </div>\r\n            {/* <p>{updatedAt}</p> */}\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default TaskCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport api from \"../services/api\";\r\n\r\nimport TaskCard from \"../components/TaskCard\";\r\nimport { TaskType, NavigationType, PaginatedInfoType } from \"../types\";\r\n\r\nfunction HomeScreen() {\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [tasks, setTasks] = useState<TaskType[]>();\r\n    const [navigation, setNavigation] = useState<NavigationType>({ offset: 0, limit: 10, last: 0 });\r\n\r\n    useEffect(() => {\r\n        fetchTasks(navigation.offset, navigation.limit);\r\n    }, [navigation.offset, navigation.limit]);\r\n\r\n    function fetchTasks(offset: number, limit: number) {\r\n        setLoading(true);\r\n        return api.get(`/tasks?offset=${offset}&limit=${limit}`).then((response) => {\r\n            const { offset, limit, last, results } = response.data as PaginatedInfoType;\r\n\r\n            setLoading(false);\r\n            setTasks(results);\r\n            setNavigation({ offset, limit, last });\r\n        });\r\n    }\r\n\r\n    function handlePageClick(data: any) {\r\n        const selected = data.selected;\r\n        const offset = Math.ceil(selected * navigation.limit);\r\n\r\n        fetchTasks(offset, navigation.limit);\r\n    }\r\n\r\n    return (\r\n        <div className=\"screen-route home-screen\">\r\n            {!loading && tasks && (\r\n                <ul className=\"todo-list\">\r\n                    {tasks.map((task, index) => (\r\n                        <TaskCard taskData={task} key={index} />\r\n                    ))}\r\n                </ul>\r\n            )}\r\n\r\n            {loading && (\r\n                <div className=\"flex-center\">\r\n                    <ReactLoading type=\"bars\" color=\"#bbb\" />\r\n                </div>\r\n            )}\r\n\r\n            <ReactPaginate\r\n                pageCount={Math.max(1, Math.ceil(navigation.last / navigation.limit))}\r\n                pageRangeDisplayed={4}\r\n                marginPagesDisplayed={1}\r\n                onPageChange={handlePageClick}\r\n                breakLabel={\"...\"}\r\n                nextLabel={\"Próximo\"}\r\n                previousLabel={\"Voltar\"}\r\n                containerClassName={\"pagination\"}\r\n                breakClassName={\"break-me\"}\r\n                activeClassName={\"active\"}\r\n                nextClassName={\"button-link\"}\r\n                pageLinkClassName={\"button-link\"}\r\n                previousClassName={\"button-link\"}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nimport TaskCard from \"../components/TaskCard\";\r\n\r\nimport api from \"../services/api\";\r\nimport { TaskType } from \"../types\";\r\n\r\nfunction EditScreen() {\r\n    let { id } = useParams<{ id: string }>();\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [editTask, setEditTask] = useState<TaskType>();\r\n\r\n    const [title, setTitle] = useState<string>(\"\");\r\n    const [description, setDescription] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        api.get(`/tasks/${id}`)\r\n            .then((response) => {\r\n                const task = response.data as TaskType;\r\n\r\n                setEditTask(task);\r\n\r\n                setTitle(task.title);\r\n                setDescription(task?.description || \"\");\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                history.push(\"/\");\r\n\r\n                if (error.response) {\r\n                    const status = error.response.status;\r\n                    const errorData = error.response.data;\r\n\r\n                    toast.error(`${status} - ${errorData.error}`);\r\n                } else {\r\n                    toast.error(`Houve um problema ao tentar acessar a tarefa... Por favor, verifique as informações.`);\r\n                }\r\n            });\r\n    }, [id, history]);\r\n\r\n    useEffect(() => {\r\n        setEditTask((oldValue) => {\r\n            const tempTask = {\r\n                _id: oldValue?._id,\r\n                title: title,\r\n                description: description,\r\n                createdAt: oldValue?.createdAt,\r\n                updatedAt: oldValue?.updatedAt,\r\n            } as TaskType;\r\n            return tempTask;\r\n        });\r\n    }, [title, description]);\r\n\r\n    function handleSubmit(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n\r\n        const updatedTask = {\r\n            title,\r\n            description,\r\n        };\r\n\r\n        api.patch(`/tasks/${editTask?._id}/edit`, updatedTask)\r\n            .then(() => {\r\n                toast.success(\"As alterações foram salvas com sucesso!\");\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    const status = error.response.status;\r\n                    const errorData = error.response.data;\r\n\r\n                    toast.error(`${status} - ${errorData.error}`);\r\n                } else {\r\n                    toast.error(`Houve um problema ao tentar salvar as aterações... Por favor, tente novamente.`);\r\n                }\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function handleDelete(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n\r\n        api.delete(`/tasks/${editTask?._id}/delete`)\r\n            .then(() => {\r\n                toast.success(\"Uma tarefa foi removida com sucesso!\");\r\n                history.push(\"/\");\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n\r\n                if (error.response) {\r\n                    const status = error.response.status;\r\n                    const errorData = error.response.data;\r\n\r\n                    toast.error(`${status} - ${errorData.error}`);\r\n                } else {\r\n                    toast.error(`Houve um problema ao tentar remover a tarefa... Por favor, tente novamente.`);\r\n                }\r\n            });\r\n    }\r\n\r\n    function handleCancel(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n        toast.info(\"Nenhuma das alterações realizadas foram salvas!\");\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"screen-route edit-screen\">\r\n            {loading && (\r\n                <div className=\"flex-center\">\r\n                    <ReactLoading type=\"bars\" color=\"#bbb\" />\r\n                </div>\r\n            )}\r\n            {!loading && !editTask && (\r\n                <div className=\"flex-center\">\r\n                    <ReactLoading type=\"bars\" color=\"#bbb\" />\r\n                </div>\r\n            )}\r\n            {!loading && editTask && <TaskCard taskData={editTask} />}\r\n            {!loading && editTask && (\r\n                <form className=\"col\">\r\n                    <label className=\"col\">\r\n                        Título\r\n                        <input className=\"input-text\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                    </label>\r\n                    <label className=\"col\">\r\n                        Descrição\r\n                        <input className=\"input-text\" type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                    </label>\r\n                    <input className=\"create-task-button\" type=\"submit\" value=\"Salvar\" onClick={handleSubmit} />\r\n                    <input className=\"create-task-button\" type=\"submit\" value=\"Cancelar\" onClick={handleCancel} />\r\n                    <input className=\"delete-task-button\" type=\"submit\" value=\"Excluir\" onClick={handleDelete} />\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditScreen;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nimport api from \"../services/api\";\r\n\r\nfunction CreateScreen() {\r\n    const [loading, setLoading] = useState<boolean>();\r\n    const [title, setTitle] = useState<string>(\"\");\r\n    const [description, setDescription] = useState<string>(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    function handleSubmit(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n\r\n        api.post(\"/tasks/create\", {\r\n            title,\r\n            description,\r\n        })\r\n            .then(() => {\r\n                toast.success(\"Tarefa criada com sucesso!\");\r\n                history.push(\"/\");\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n\r\n                if (error.response) {\r\n                    const status = error.response.status;\r\n                    const errorData = error.response.data;\r\n\r\n                    toast.error(`${status} - ${errorData.error}`);\r\n                } else {\r\n                    toast.error(`Houve um problema ao tentar criar a tarefa... Por favor, tente novamente.`);\r\n                }\r\n            });\r\n    }\r\n\r\n    function handleCancel(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n        toast.info(\"Nenhuma das alterações realizadas foram salvas!\");\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"screen-route create-screen\">\r\n            {loading && (\r\n                <div className=\"flex-center\">\r\n                    <ReactLoading type=\"bars\" color=\"#bbb\" />\r\n                </div>\r\n            )}\r\n            {!loading && (\r\n                <form className=\"col\">\r\n                    <label className=\"col\">\r\n                        Título\r\n                        <input className=\"input-text\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                    </label>\r\n                    <label className=\"col\">\r\n                        Descrição\r\n                        <input className=\"input-text\" type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                    </label>\r\n                    <input className=\"create-task-button\" type=\"submit\" value=\"Criar\" onClick={handleSubmit} />\r\n                    <input className=\"create-task-button\" type=\"submit\" value=\"Cancelar\" onClick={handleCancel} />\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateScreen;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"./App.css\";\n\nimport { HomeScreen, EditScreen, CreateScreen } from \"./screens\";\n\nconst REACT_ENV: string = process.env.REACT_ENV || \"production\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                {REACT_ENV !== \"production\" && <span>dev-mode</span>}\n                <h1 className=\"app-title\">TODOrial</h1>\n\n                <div className=\"navbar\">\n                    <Link to=\"/\">Tarefas</Link>\n                    <Link to=\"/create\">Adicionar Tarefa</Link>\n                </div>\n\n                <Switch>\n                    <Route path=\"/create\">\n                        <CreateScreen />\n                    </Route>\n                    <Route path=\"/:id/edit\">\n                        <EditScreen />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomeScreen />\n                    </Route>\n                </Switch>\n                <ToastContainer\n                    position=\"top-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover\n                />\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}