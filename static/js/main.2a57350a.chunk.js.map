{"version":3,"sources":["services/api.ts","components/TaskCard/index.tsx","screens/HomeScreen.tsx","screens/EditScreen.tsx","screens/CreateScreen.tsx","App.tsx","index.tsx"],"names":["REACT_ENV","process","api","axios","create","baseURL","development","production","TaskCard","taskData","_id","title","description","createdAt","DateTime","local","setLocale","updatedAtDate","fromISO","className","to","toFormat","HomeScreen","useState","loading","setLoading","tasks","setTasks","offset","limit","last","navigation","setNavigation","fetchTasks","get","then","response","data","results","console","log","useEffect","map","task","index","key","type","color","pageCount","Math","max","ceil","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","breakLabel","nextLabel","previousLabel","containerClassName","breakClassName","activeClassName","nextClassName","pageLinkClassName","previousClassName","EditScreen","id","useParams","history","useHistory","editTask","setEditTask","setTitle","setDescription","catch","error","push","oldValue","updatedAt","value","onChange","e","target","onClick","event","preventDefault","updatedTask","patch","delete","CreateScreen","post","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a57350a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst REACT_ENV: string = process.env.REACT_ENV || \"production\";\r\n\r\nconst baseURLs: { [key: string]: string } = {\r\n    development: \"http://localhost:5000\",\r\n    production: \"https://todorial.herokuapp.com\",\r\n};\r\n\r\nconst api = axios.create({ baseURL: baseURLs[REACT_ENV] });\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport { DateTime } from \"luxon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { TaskType } from \"../../types\";\r\n\r\nfunction TaskCard({ taskData }: { taskData: TaskType }) {\r\n    const { _id, title, description, createdAt } = taskData;\r\n\r\n    DateTime.local().setLocale(\"pt-br\");\r\n\r\n    const updatedAtDate = DateTime.fromISO(createdAt);\r\n\r\n    return (\r\n        <Link className=\"task-card\" to={`/${_id}/edit`}>\r\n            {/* <p>{_id}</p> */}\r\n            <h4 className=\"task-title\">{title}</h4>\r\n            <div className=\"row space-between word-break-all\">\r\n                <p className=\"task-description\">{description}</p>\r\n                <p className=\"task-updated-at-date\">{updatedAtDate.toFormat(\"ff\")}</p>\r\n            </div>\r\n            {/* <p>{updatedAt}</p> */}\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default TaskCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport api from \"../services/api\";\r\n\r\nimport TaskCard from \"../components/TaskCard\";\r\nimport { TaskType, NavigationType, PaginatedInfoType } from \"../types\";\r\n\r\nfunction HomeScreen() {\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [tasks, setTasks] = useState<TaskType[]>();\r\n    const [navigation, setNavigation] = useState<NavigationType>({ offset: 0, limit: 10, last: 0 });\r\n\r\n    useEffect(() => {\r\n        fetchTasks(navigation.offset, navigation.limit);\r\n    }, [navigation.offset, navigation.limit]);\r\n\r\n    function fetchTasks(offset: number, limit: number) {\r\n        setLoading(true);\r\n        return api.get(`/tasks?offset=${offset}&limit=${limit}`).then((response) => {\r\n            const { offset, limit, last, results } = response.data as PaginatedInfoType;\r\n\r\n            console.log(response.data);\r\n\r\n            setLoading(false);\r\n            setTasks(results);\r\n            setNavigation({ offset, limit, last });\r\n        });\r\n    }\r\n\r\n    function handlePageClick(data: any) {\r\n        const selected = data.selected;\r\n        const offset = Math.ceil(selected * navigation.limit);\r\n\r\n        fetchTasks(offset, navigation.limit);\r\n    }\r\n\r\n    return (\r\n        <div className=\"screen-route home-screen\">\r\n            {!loading && tasks && (\r\n                <ul className=\"todo-list\">\r\n                    {tasks.map((task, index) => (\r\n                        <TaskCard taskData={task} key={index} />\r\n                    ))}\r\n                </ul>\r\n            )}\r\n\r\n            {loading && (\r\n                <div className=\"flex-center\">\r\n                    <ReactLoading type=\"bars\" color=\"#bbb\" />\r\n                </div>\r\n            )}\r\n\r\n            <ReactPaginate\r\n                pageCount={Math.max(1, Math.ceil(navigation.last / navigation.limit))}\r\n                pageRangeDisplayed={4}\r\n                marginPagesDisplayed={1}\r\n                onPageChange={handlePageClick}\r\n                breakLabel={\"...\"}\r\n                nextLabel={\"PrÃ³ximo\"}\r\n                previousLabel={\"Voltar\"}\r\n                containerClassName={\"pagination\"}\r\n                breakClassName={\"break-me\"}\r\n                activeClassName={\"active\"}\r\n                nextClassName={\"button-link\"}\r\n                pageLinkClassName={\"button-link\"}\r\n                previousClassName={\"button-link\"}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport TaskCard from \"../components/TaskCard\";\r\n\r\nimport api from \"../services/api\";\r\nimport { TaskType } from \"../types\";\r\n\r\nfunction EditScreen() {\r\n    let { id } = useParams<{ id: string }>();\r\n    const history = useHistory();\r\n\r\n    const [editTask, setEditTask] = useState<TaskType>();\r\n\r\n    const [title, setTitle] = useState<string>(\"\");\r\n    const [description, setDescription] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        api.get(`/tasks/${id}`)\r\n            .then((response) => {\r\n                const task = response.data as TaskType;\r\n\r\n                setEditTask(task);\r\n\r\n                setTitle(task.title);\r\n                setDescription(task?.description || \"\");\r\n            })\r\n            .catch((error) => {\r\n                history.push(\"/\");\r\n            });\r\n    }, [id, history]);\r\n\r\n    useEffect(() => {\r\n        setEditTask((oldValue) => {\r\n            const tempTask = {\r\n                _id: oldValue?._id,\r\n                title: title,\r\n                description: description,\r\n                createdAt: oldValue?.createdAt,\r\n                updatedAt: oldValue?.updatedAt,\r\n            } as TaskType;\r\n            return tempTask;\r\n        });\r\n    }, [title, description]);\r\n\r\n    function handleSubmit(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n\r\n        const updatedTask = {\r\n            title,\r\n            description,\r\n        };\r\n\r\n        api.patch(`/tasks/${editTask?._id}/edit`, updatedTask).then(() => {\r\n            history.push(\"/\");\r\n        });\r\n    }\r\n\r\n    function handleDelete(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n\r\n        api.delete(`/tasks/${editTask?._id}/delete`).then(() => {\r\n            history.push(\"/\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"screen-route edit-screen\">\r\n            {editTask && <TaskCard taskData={editTask} />}\r\n            <form className=\"col\">\r\n                <label className=\"col\">\r\n                    TÃ­tulo\r\n                    <input className=\"input-text\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                </label>\r\n                <label className=\"col\">\r\n                    DescriÃ§Ã£o\r\n                    <input className=\"input-text\" type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                </label>\r\n                <input className=\"create-task-button\" type=\"submit\" value=\"Salvar\" onClick={handleSubmit} />\r\n                <input className=\"delete-task-button\" type=\"submit\" value=\"Excluir\" onClick={handleDelete} />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditScreen;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport api from \"../services/api\";\r\n\r\nfunction CreateScreen() {\r\n    const [title, setTitle] = useState<string>();\r\n    const [description, setDescription] = useState<string>();\r\n\r\n    const history = useHistory();\r\n\r\n    function handleSubmit(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n\r\n        api.post(\"/tasks/create\", {\r\n            title,\r\n            description,\r\n        }).then(() => {\r\n            history.push(\"/\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"screen-route create-screen\">\r\n            <form className=\"col\">\r\n                <label className=\"col\">\r\n                    TÃ­tulo\r\n                    <input className=\"input-text\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                </label>\r\n                <label className=\"col\">\r\n                    DescriÃ§Ã£o\r\n                    <input className=\"input-text\" type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                </label>\r\n                <input className=\"create-task-button\" type=\"submit\" value=\"Criar\" onClick={handleSubmit} />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateScreen;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport { HomeScreen, EditScreen, CreateScreen } from \"./screens\";\n\nconst REACT_ENV: string = process.env.REACT_ENV || \"production\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                {REACT_ENV !== \"production\" && <span>dev-mode</span>}\n                <h1 className=\"app-title\">TODOrial</h1>\n\n                <div className=\"navbar\">\n                    <Link to=\"/\">Tarefas</Link>\n                    <Link to=\"/create\">Adicionar Tarefa</Link>\n                </div>\n                <Switch>\n                    <Route path=\"/create\">\n                        <CreateScreen />\n                    </Route>\n                    <Route path=\"/:id/edit\">\n                        <EditScreen />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomeScreen />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}