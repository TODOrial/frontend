{"version":3,"sources":["services/api.ts","components/TaskCard/index.tsx","screens/HomeScreen.tsx","screens/EditScreen.tsx","screens/CreateScreen.tsx","App.tsx","index.tsx"],"names":["REACT_ENV","process","api","axios","create","baseURL","development","production","TaskCard","taskData","_id","title","description","createdAt","DateTime","local","setLocale","updatedAtDate","fromISO","className","to","toFormat","HomeScreen","useUrlSearchParams","offset","limit","Number","params","setParams","useState","loading","setLoading","tasks","setTasks","last","navigation","setNavigation","map","task","index","key","type","color","initialPage","pageCount","Math","max","ceil","pageRangeDisplayed","marginPagesDisplayed","onPageChange","data","selected","get","then","response","results","fetchTasks","breakLabel","nextLabel","previousLabel","containerClassName","breakClassName","activeClassName","nextClassName","pageLinkClassName","previousClassName","EditScreen","id","useParams","history","useHistory","editTask","setEditTask","setTitle","setDescription","useEffect","catch","error","push","status","errorData","toast","oldValue","updatedAt","value","onChange","e","target","onClick","event","preventDefault","updatedTask","patch","success","info","delete","CreateScreen","post","App","path","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb7561fa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst REACT_ENV: string = process.env.REACT_ENV || \"production\";\r\n\r\nconst baseURLs: { [key: string]: string } = {\r\n    development: \"http://localhost:5000\",\r\n    production: \"https://todorial.herokuapp.com\",\r\n};\r\n\r\nconst api = axios.create({ baseURL: baseURLs[REACT_ENV] });\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport { DateTime } from \"luxon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { TaskType } from \"../../types\";\r\n\r\nfunction TaskCard({ taskData }: { taskData: TaskType }) {\r\n    const { _id, title, description, createdAt } = taskData;\r\n\r\n    DateTime.local().setLocale(\"pt-br\");\r\n\r\n    const updatedAtDate = DateTime.fromISO(createdAt);\r\n\r\n    return (\r\n        <Link className=\"task-card\" to={`/${_id}/edit`}>\r\n            {/* <p>{_id}</p> */}\r\n            <h4 className=\"task-title\">{title}</h4>\r\n            <div className=\"row space-between word-break-all\">\r\n                <p className=\"task-description\">{description}</p>\r\n                <p className=\"task-updated-at-date\">{updatedAtDate.toFormat(\"ff\")}</p>\r\n            </div>\r\n            {/* <p>{updatedAt}</p> */}\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default TaskCard;\r\n","import React, { useState } from \"react\";\r\nimport { useUrlSearchParams } from \"use-url-search-params\";\r\nimport ReactLoading from \"react-loading\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport api from \"../services/api\";\r\n\r\nimport TaskCard from \"../components/TaskCard\";\r\nimport { TaskType, NavigationType, PaginatedInfoType } from \"../types\";\r\n\r\nfunction HomeScreen() {\r\n    const [params, setParams] = useUrlSearchParams({ offset: 0, limit: 10 }, { offset: Number, limit: Number });\r\n\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [tasks, setTasks] = useState<TaskType[]>();\r\n    const [navigation, setNavigation] = useState<NavigationType>({ offset: params.offset as number, limit: params.limit as number, last: 0 });\r\n\r\n    function fetchTasks(offset: number, limit: number) {\r\n        setLoading(true);\r\n\r\n        return api.get(`/tasks?offset=${offset}&limit=${limit}`).then((response) => {\r\n            const { offset, limit, last, results } = response.data as PaginatedInfoType;\r\n\r\n            setLoading(false);\r\n            setTasks(results);\r\n            setNavigation({ offset, limit, last });\r\n        });\r\n    }\r\n\r\n    function handlePageChange(data: any) {\r\n        const selected = data.selected;\r\n        const offset = Math.ceil(selected * navigation.limit);\r\n\r\n        fetchTasks(offset, navigation.limit);\r\n        setParams({ offset, limit: navigation.limit });\r\n    }\r\n\r\n    return (\r\n        <div className=\"screen-route home-screen\">\r\n            {!loading && tasks && (\r\n                <ul className=\"todo-list\">\r\n                    {tasks.map((task, index) => (\r\n                        <TaskCard taskData={task} key={index} />\r\n                    ))}\r\n                </ul>\r\n            )}\r\n\r\n            {loading && (\r\n                <div className=\"flex-center\">\r\n                    <ReactLoading type=\"bars\" color=\"#bbb\" />\r\n                </div>\r\n            )}\r\n\r\n            <ReactPaginate\r\n                initialPage={navigation.offset / navigation.limit}\r\n                pageCount={Math.max(1, Math.ceil(navigation.last / navigation.limit))}\r\n                pageRangeDisplayed={4}\r\n                marginPagesDisplayed={1}\r\n                onPageChange={handlePageChange}\r\n                breakLabel={\"...\"}\r\n                nextLabel={\"Próximo\"}\r\n                previousLabel={\"Voltar\"}\r\n                containerClassName={\"pagination\"}\r\n                breakClassName={\"break-me\"}\r\n                activeClassName={\"active\"}\r\n                nextClassName={\"button-link\"}\r\n                pageLinkClassName={\"button-link\"}\r\n                previousClassName={\"button-link\"}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nimport TaskCard from \"../components/TaskCard\";\r\n\r\nimport api from \"../services/api\";\r\nimport { TaskType } from \"../types\";\r\n\r\nfunction EditScreen() {\r\n    let { id } = useParams<{ id: string }>();\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [editTask, setEditTask] = useState<TaskType>();\r\n\r\n    const [title, setTitle] = useState<string>(\"\");\r\n    const [description, setDescription] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        api.get(`/tasks/${id}`)\r\n            .then((response) => {\r\n                const task = response.data as TaskType;\r\n\r\n                setEditTask(task);\r\n\r\n                setTitle(task.title);\r\n                setDescription(task?.description || \"\");\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                history.push(\"/\");\r\n\r\n                if (error.response) {\r\n                    const status = error.response.status;\r\n                    const errorData = error.response.data;\r\n\r\n                    toast.error(`${status} - ${errorData.error}`);\r\n                } else {\r\n                    toast.error(`Houve um problema ao tentar acessar a tarefa... Por favor, verifique as informações.`);\r\n                }\r\n            });\r\n    }, [id, history]);\r\n\r\n    useEffect(() => {\r\n        setEditTask((oldValue) => {\r\n            const tempTask = {\r\n                _id: oldValue?._id,\r\n                title: title,\r\n                description: description,\r\n                createdAt: oldValue?.createdAt,\r\n                updatedAt: oldValue?.updatedAt,\r\n            } as TaskType;\r\n            return tempTask;\r\n        });\r\n    }, [title, description]);\r\n\r\n    function handleSubmit(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n\r\n        const updatedTask = {\r\n            title,\r\n            description,\r\n        };\r\n\r\n        api.patch(`/tasks/${editTask?._id}/edit`, updatedTask)\r\n            .then(() => {\r\n                toast.success(\"As alterações foram salvas com sucesso!\");\r\n            })\r\n            .catch((error) => {\r\n                if (error.response) {\r\n                    const status = error.response.status;\r\n                    const errorData = error.response.data;\r\n\r\n                    toast.error(`${status} - ${errorData.error}`);\r\n                } else {\r\n                    toast.error(`Houve um problema ao tentar salvar as aterações... Por favor, tente novamente.`);\r\n                }\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function handleDelete(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n\r\n        api.delete(`/tasks/${editTask?._id}/delete`)\r\n            .then(() => {\r\n                toast.success(\"Uma tarefa foi removida com sucesso!\");\r\n                history.push(\"/\");\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n\r\n                if (error.response) {\r\n                    const status = error.response.status;\r\n                    const errorData = error.response.data;\r\n\r\n                    toast.error(`${status} - ${errorData.error}`);\r\n                } else {\r\n                    toast.error(`Houve um problema ao tentar remover a tarefa... Por favor, tente novamente.`);\r\n                }\r\n            });\r\n    }\r\n\r\n    function handleCancel(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n        toast.info(\"Nenhuma das alterações realizadas foram salvas!\");\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"screen-route edit-screen\">\r\n            {loading && (\r\n                <div className=\"flex-center\">\r\n                    <ReactLoading type=\"bars\" color=\"#bbb\" />\r\n                </div>\r\n            )}\r\n            {!loading && !editTask && (\r\n                <div className=\"flex-center\">\r\n                    <ReactLoading type=\"bars\" color=\"#bbb\" />\r\n                </div>\r\n            )}\r\n            {!loading && editTask && <TaskCard taskData={editTask} />}\r\n            {!loading && editTask && (\r\n                <form className=\"col\">\r\n                    <label className=\"col\">\r\n                        Título\r\n                        <input className=\"input-text\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                    </label>\r\n                    <label className=\"col\">\r\n                        Descrição\r\n                        <input className=\"input-text\" type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                    </label>\r\n                    <input className=\"create-task-button\" type=\"submit\" value=\"Salvar\" onClick={handleSubmit} />\r\n                    <input className=\"create-task-button\" type=\"submit\" value=\"Cancelar\" onClick={handleCancel} />\r\n                    <input className=\"delete-task-button\" type=\"submit\" value=\"Excluir\" onClick={handleDelete} />\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditScreen;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nimport api from \"../services/api\";\r\n\r\nfunction CreateScreen() {\r\n    const [loading, setLoading] = useState<boolean>();\r\n    const [title, setTitle] = useState<string>(\"\");\r\n    const [description, setDescription] = useState<string>(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    function handleSubmit(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n\r\n        api.post(\"/tasks/create\", {\r\n            title,\r\n            description,\r\n        })\r\n            .then(() => {\r\n                toast.success(\"Tarefa criada com sucesso!\");\r\n                history.push(\"/\");\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n\r\n                if (error.response) {\r\n                    const status = error.response.status;\r\n                    const errorData = error.response.data;\r\n\r\n                    toast.error(`${status} - ${errorData.error}`);\r\n                } else {\r\n                    toast.error(`Houve um problema ao tentar criar a tarefa... Por favor, tente novamente.`);\r\n                }\r\n            });\r\n    }\r\n\r\n    function handleCancel(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\r\n        event.preventDefault();\r\n        toast.info(\"Nenhuma das alterações realizadas foram salvas!\");\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"screen-route create-screen\">\r\n            {loading && (\r\n                <div className=\"flex-center\">\r\n                    <ReactLoading type=\"bars\" color=\"#bbb\" />\r\n                </div>\r\n            )}\r\n            {!loading && (\r\n                <form className=\"col\">\r\n                    <label className=\"col\">\r\n                        Título\r\n                        <input className=\"input-text\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                    </label>\r\n                    <label className=\"col\">\r\n                        Descrição\r\n                        <input className=\"input-text\" type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                    </label>\r\n                    <input className=\"create-task-button\" type=\"submit\" value=\"Criar\" onClick={handleSubmit} />\r\n                    <input className=\"create-task-button\" type=\"submit\" value=\"Cancelar\" onClick={handleCancel} />\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateScreen;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"./App.css\";\n\nimport { HomeScreen, EditScreen, CreateScreen } from \"./screens\";\n\nconst REACT_ENV: string = process.env.REACT_ENV || \"production\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                {REACT_ENV !== \"production\" && <span>dev-mode</span>}\n                <h1 className=\"app-title\">TODOrial</h1>\n\n                <div className=\"navbar\">\n                    <Link to=\"/\">Tarefas</Link>\n                    <Link to=\"/create\">Adicionar Tarefa</Link>\n                </div>\n\n                <Switch>\n                    <Route path=\"/create\">\n                        <CreateScreen />\n                    </Route>\n                    <Route path=\"/:id/edit\">\n                        <EditScreen />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomeScreen />\n                    </Route>\n                </Switch>\n                <ToastContainer\n                    position=\"top-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover\n                />\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}